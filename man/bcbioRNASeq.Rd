% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerators.R
\name{bcbioRNASeq}
\alias{bcbioRNASeq}
\title{bcbio RNA-Seq data set}
\usage{
bcbioRNASeq(
  uploadDir,
  level = c("genes", "transcripts"),
  caller = c("salmon", "kallisto", "sailfish", "star", "hisat2"),
  samples = NULL,
  censorSamples = NULL,
  sampleMetadataFile = NULL,
  organism = NULL,
  genomeBuild = NULL,
  ensemblRelease = NULL,
  gffFile = NULL,
  transgeneNames = NULL,
  countsFromAbundance = "lengthScaledTPM",
  interestingGroups = "sampleName",
  fast = FALSE
)
}
\arguments{
\item{uploadDir}{\code{character(1)}.
Final upload directory path.}

\item{level}{\code{character(1)}.
Import counts at gene level ("\code{genes}"; \emph{default}) or transcript level
("\code{transcripts}"; \emph{advanced use}). Only tximport-compatible callers (e.g.
salmon, kallisto, sailfish) can be loaded at transcript level. Aligned
counts from featureCounts-compatible callers (e.g. STAR, HISAT2) can only
be loaded at gene level.}

\item{caller}{\code{character(1)}.
Expression caller:
\itemize{
\item \code{"salmon"} (\emph{default}): \href{https://combine-lab.github.io/salmon/}{Salmon} alignment-free, quasi-mapped counts.
\item \code{"kallisto"}: \href{https://pachterlab.github.io/kallisto/}{Kallisto} alignment-free, pseudo-aligned counts.
\item \code{"sailfish"}: \href{http://www.cs.cmu.edu/~ckingsf/software/sailfish/}{Sailfish} alignment-free, lightweight counts.
\item \code{"star"}: \href{https://github.com/alexdobin/STAR/}{STAR} (Spliced Transcripts Alignment to a Reference)
aligned counts.
\item \code{"hisat2"}: \href{https://ccb.jhu.edu/software/hisat2/}{HISAT2} (Hierarchical Indexing for Spliced Alignment of
Transcripts) graph-based aligned counts.
}}

\item{samples}{\code{character}.
Sample identifiers.}

\item{censorSamples}{\code{character}.
Specify a subset of samples to censor.}

\item{sampleMetadataFile}{\code{character(1)}.
Sample metadata file path. CSV or TSV is preferred, but Excel worksheets
are also supported. Check the documentation for conventions and required
columns.}

\item{organism}{\code{character(1)}.
Full Latin organism name (e.g. \code{"Homo sapiens"}).}

\item{genomeBuild}{\code{character(1)}.
Ensembl genome build assembly name (e.g. \code{"GRCh38"}). If set \code{NULL},
defaults to the most recent build available.
\emph{Note:} don't pass in UCSC build IDs (e.g. \code{"hg38"}).}

\item{ensemblRelease}{\code{integer(1)}.
Ensembl release version (e.g. \code{90}). We recommend setting this value if
possible, for improved reproducibility. When left unset, the latest release
available via AnnotationHub/ensembldb is used. Note that the latest version
available can vary, depending on the versions of AnnotationHub and
ensembldb in use.}

\item{gffFile}{\code{character(1)}.
GFF/GTF (General Feature Format) file.
Generally, we recommend using GTF (GFFv2) instead of GFFv3.}

\item{transgeneNames}{\code{character}.
Vector indicating which assay rows denote transgenes (e.g. EGFP, TDTOMATO).}

\item{countsFromAbundance}{\code{character(1)}.
Whether to generate estimated counts using abundance estimates
(\emph{recommended by default}). \code{lengthScaledTPM} is a suitable default, and
counts are scaled using the average transcript length over samples and then
the library size. Refer to \code{tximport::tximport()} for more information on
this parameter, but it should only ever be changed when loading some
datasets at transcript level (e.g. for DTU analsyis).}

\item{interestingGroups}{\code{character}.
Groups of interest to use for visualization.
Corresponds to factors describing the columns of the object.}

\item{fast}{\code{logical(1)}.
Fast mode.
Skip internal DESeq2 calculations and transformations.
Don't enable this setting when using the quality control R Markdown
template.
Note that some plotting functions, such as \code{plotPCA()} will not work when
this mode is enabled.}
}
\value{
\code{bcbioRNASeq}.
}
\description{
\code{bcbioRNASeq} is an S4 class that extends \code{RangedSummarizedExperiment}, and
is designed to store a \href{https://bcbio-nextgen.readthedocs.org}{bcbio} RNA-seq
analysis.
}
\details{
Automatically imports RNA-seq counts, metadata, and the program versions used
from a \href{https://bcbio-nextgen.readthedocs.io}{bcbio} RNA-seq run. Simply point to the final upload directory
generated by bcbio, and this generator function will take care of the rest.
}
\note{
Updated 2022-03-07.
}
\section{Sample metadata}{


When loading a bcbio RNA-seq run, the sample metadata will be imported
automatically from the \code{project-summary.yaml} file in the final upload
directory. If you notice any typos in your metadata after completing the run,
these can be corrected by editing the YAML file.

Alternatively, you can pass in a sample metadata file into the
\code{bcbioRNASeq()} function call using the \code{sampleMetadataFile} argument. This
requires either a CSV or Excel spreadsheet.

The samples in the bcbio run must map to the \code{description} column. The values
provided in \code{description} must be unique. These values will be sanitized into
syntactically valid names (see \code{make.names()} for more information), and
assigned as the column names of the \code{bcbioRNASeq} object. The original values
are stored as the \code{sampleName} column in \code{colData}, and are used for all
plotting functions. Do not attempt to set a \code{sampleId} column, as this is
used internally by the package.

Here is a minimal example of a properly formatted sample metadata file:

\tabular{ll}{
description \tab genotype\cr
sample1 \tab wildtype\cr
sample2 \tab knockout\cr
sample3 \tab wildtype\cr
sample4 \tab knockout
}
}

\section{Valid names}{


R is strict about values that are considered valid for use in \code{names()} and
\code{dimnames()} (i.e. \code{rownames()} and \code{colnames()}. Non-alphanumeric
characters, spaces, and \strong{dashes} are not valid. Use either underscores or
periods in place of dashes when working in R. Also note that names should
\strong{not begin with a number}, and will be prefixed with an \code{X} when sanitized.
Consult the documentation in the \code{make.names()} function for more
information. We strongly recommend adhering to these conventions when
labeling samples, to help avoid unexpected downstream behavior in R due to
\code{dimnames()} mismatches.
}

\section{Genome annotations}{


\code{bcbioRNASeq()} provides support for automatic import of genome annotations,
which internally get processed into genomic ranges (\code{GRanges}) and are
slotted into the \code{rowRanges()} of the object. Currently, we offer support for
(1) \href{https://ensembl.org/}{Ensembl} genome annotations from \href{https://bioconductor.org/packages/AnnotationHub/}{AnnotationHub} via \href{https://bioconductor.org/packages/ensembldb/}{ensembldb}
(\emph{recommended}); or (2) direct import from a GTF/GFF file using
\href{https://bioconductor.org/packages/rtracklayer/}{rtracklayer}.

\href{https://bioconductor.org/packages/ensembldb/}{ensembldb} requires the \code{organism} and \code{ensemblRelease} arguments to be
defined. When both of these are set, \code{bcbioRNASeq} will attempt to
download and use the pre-built \href{https://ensembl.org/}{Ensembl} genome annotations from
\href{https://bioconductor.org/packages/AnnotationHub/}{AnnotationHub}. This method is preferred over direct loading of a GTF/GFF
file because the \href{https://bioconductor.org/packages/AnnotationHub/}{AnnotationHub} annotations contain additional rich
metadata not defined in a GFF file, specifically \code{description} and \code{entrezId}
values.

Alternatively, if you are working with a non-standard or poorly annotated
genome that isn't available on \href{https://bioconductor.org/packages/AnnotationHub/}{AnnotationHub}, we provide fall back
support for loading the genome annotations directly from the GTF file used by
the bcbio RNA-seq pipeline. This should be fully automatic for an R session
active on the same server used to run \href{https://bcbio-nextgen.readthedocs.io/}{bcbio}.

Example bcbio GTF path: \code{genomes/Hsapiens/hg38/rnaseq/ref-transcripts.gtf}.

In the event that you are working from a remote environment that doesn't
have file system access to the \href{https://bcbio-nextgen.readthedocs.io/}{bcbio} \code{genomes} directory, we provide
additional fall back support for importing genome annotations from a GTF/GFF
directly with the \code{gffFile} argument.

Internally, genome annotations are imported via the \href{https://steinbaugh.com/basejump/}{basejump} package,
specifically with either of these functions:
\itemize{
\item \code{AcidGenomes::makeGRangesFromEnsembl()}.
\item \code{AcidGenomes::makeGRangesFromGFF()}.
}
}

\section{Genome build}{


Ensure that the organism and genome build used with bcio match correctly here
in the function call. In particular, for the legacy \emph{Homo sapiens}
GRCh37/hg19 genome build, ensure that \code{genomeBuild = "GRCh37"}. Otherwise,
the genomic ranges set in \code{rowRanges()} will mismatch. It is recommended for
current projects that GRCh38/hg38 is used in place of GRCh37/hg19 if
possible.
}

\section{DESeq2}{


DESeq2 is run automatically when \code{bcbioRNASeq()} is called, unless
\code{fast = TRUE} is set. Internally, this automatically slots normalized counts
into \code{assays()}, and generates variance-stabilized counts.
}

\section{Remote connections}{


When working on a local machine, it is possible to load bcbio run data over a
remote connection using \href{https://github.com/osxfuse/osxfuse/wiki/SSHFS}{sshfs}. When loading a large number of samples, it
is preferable to call \code{bcbioRNASeq()} directly in R on the remote server, if
possible.
}

\examples{
uploadDir <- system.file("extdata/bcbio", package = "bcbioRNASeq")

## Gene level.
object <- bcbioRNASeq(
    uploadDir = uploadDir,
    level = "genes",
    caller = "salmon",
    organism = "Mus musculus",
    ensemblRelease = 87L
)
print(object)

## Transcript level.
object <- bcbioRNASeq(
    uploadDir = uploadDir,
    level = "transcripts",
    caller = "salmon",
    organism = "Mus musculus",
    ensemblRelease = 87L
)
print(object)

## Fast mode.
object <- bcbioRNASeq(uploadDir = uploadDir, fast = TRUE)
}
\seealso{
\itemize{
\item \code{.S4methods(class = "bcbioRNASeq")}.
\item \code{SummarizedExperiment::SummarizedExperiment()}.
\item \code{methods::initialize()}.
\item \code{methods::validObject()}.
\item \code{BiocGenerics::updateObject()}.
}
}
\author{
Michael Steinbaugh, Lorena Pantano, Rory Kirchner, Victor Barrera
}
